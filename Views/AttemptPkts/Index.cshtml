@model IEnumerable<Pkt.Models.Entites.AttemptPkt>
@{
    ViewData["Title"] = "Attempt List";
}
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card card-info">
                    <div class="card-header">
                        <h2 class="card-title"><b>Attempt List</b></h2>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <table id="example2" class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>SR. NO.</th>
                                    <th>PKT NAME</th>
                                    <th>USER ID</th>
                                    <th>USER NAME</th>
                                    <th>STATUS</th>
                                    <th>CREATED DATE</th>
                                    <th>ACTION</th>
                                    </tr>
                            </thead>
                            <tbody>
                                @{
                                    int index = 1;
                                }
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@index</td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PKTName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EmployeeId)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EmployeeName)
                                        </td>
                                        <td>
                                            @{
                                                if(Convert.ToInt32(@item.Attempts) > 0)
                                                {
                                                    <span class="badge badge-success">Attempt</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-danger">Not Attempt</span>
                                                }
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CreatedOn)
                                        </td>
                                        <td>
                                            <a href="javaScript:void(0)" class="editButton" id="@item.Id"><i class="fa fa-edit"></i></a>
                                        </td>
                                      
                                    </tr>
                                    index++;
                                    
                                }
                             </tbody>
                         </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
             </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
</section>

<div class="modal fade" id="modal-default">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Update PKT</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body card card-primary">
                <form id="quickForm" action="/AttemptPkts/UpdateRowAttemptPkts">
                    <input type="hidden" name="Id" id="id" />
                     <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>USER NAME</label>
                                <input type="text" name="name" class="form-control" id="name" placeholder="enter pkt name" readonly>
                            </div>
                            <div class="form-group">
                                <label for="exampleInputPassword1">PKT Name</label>
                                <input type="text" name="Pktname" class="form-control" id="Pktname" placeholder="enter pkt name" readonly>
                            </div>
                         </div>

                        <div class="col-md-6" data-select2-id="30">
                            
                            <div class="form-group">
                                <label>PKT Attempted</label>
                                <select class="form-select select2bs4" name="attempted" id="attempted" style="width: 100%;">
                                    <option value="">Please Select For</option>
                                    <option value="1">Attempted</option>
                                    <option value="0">Not Attempted</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="exampleInputEmail1">USER ID</label>
                                <input type="text" name="userid" class="form-control" id="userid"  readonly>
                            </div>
                         </div>
                      </div>

                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </form>
             </div>
            <div class="modal-footer justify-content">
                @* <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> *@
                <button type="button" class="btn btn-danger float-md-right" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        var baseUrl = window.location.origin;
        var controllerUrl = baseUrl;
        const urlObject = new URL(baseUrl);
        const hasPort = urlObject.port !== "" && !isNaN(parseInt(urlObject.port));

        if (hasPort) {
            controllerUrl = baseUrl;
        }
        else {
            controllerUrl = baseUrl + '/pkt';
        }

        $(function () {

           
           
            $('#quickForm').validate({
                rules: {
                    attempted: {
                        required: true,
                    },
                    name: {
                        required: true,
                        minlength: 5
                    },
                    userid: {
                        required: true
                    },
                    Pktname: {
                        required:true
                    },
                },
                messages: {
                    Pktname: {
                        required: "PKT Name Should Not be Blank"
                    },
                    attempted: {
                        required: "Please enter a PKT name",
                       
                    },
                    name: {
                        required: "Please provide a user name",
                       
                    },
                    userid: "User Id Should Not Be Blank !"
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });
    </script>

    <script type="text/javascript">

        $('.editButton').on('click', function () {
            var val = $(this).attr('id');
            $.ajax({
                url: controllerUrl + '/AttemptPkts/GetRowAttemptPkts/'+val,
                type: 'GET',
                success: function (response) {
                    $('#id').val(response.id);
                    $('#userid').val(response.employeeId);
                    $('#name').val(response.employeeName);
                    $('#Pktname').val(response.pktName);
                    if (response.attempts > 0) {
                        $('#attempted').val(1).change();
                    } else {
                        $('#attempted').val(0).change();
                    }
                    $('#modal-default').modal('show');
                }
            });
         });



        $("#quickForm").on("submit", function (e) {
            e.preventDefault();

            if ($("#quickForm").valid()) {

                $.ajax({
                    type: "post",
                    url: controllerUrl + $(this).attr('action'),
                    dataType: 'text',
                    headers: { "RequestVerificationToken": '@Html.AntiForgeryToken()' },
                    data: {
                        Id : $('#id').val(),
                        PKTName: $('#Pktname').val(),
                        EmployeeId: $('#userid').val(),
                        EmployeeName: $('#name').val(),
                        Attempts: $('#attempted').val(),
                     },
                    success: function (response) {
                        obj = JSON.parse(response);
                        if (obj.success) {
                            toastr.success(obj.message);
                            setTimeout(function () {
                                $('#modal-default').modal('hide');
                                location.reload();
                            }, 1000);
                        }

                        if (obj.error) {
                            toastr.error(obj.message);
                        }
                            
                        
                    },
                    
                });

            }
            else {
                return false;
            }
            
           
        });
    </script>
            }